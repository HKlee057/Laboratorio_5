

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 22 22:55:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0088                     	;# 
   321  0089                     	;# 
   322  008C                     	;# 
   323  008D                     	;# 
   324  008E                     	;# 
   325  008F                     	;# 
   326  0090                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0094                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009C                     	;# 
   341  009D                     	;# 
   342  009E                     	;# 
   343  009F                     	;# 
   344  0105                     	;# 
   345  0107                     	;# 
   346  0108                     	;# 
   347  0109                     	;# 
   348  010C                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  0185                     	;# 
   354  0187                     	;# 
   355  0188                     	;# 
   356  0189                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  001E                     _ADRESH	set	30
   360  000C                     _PIR1bits	set	12
   361  0008                     _PORTD	set	8
   362  0007                     _PORTC	set	7
   363  0006                     _PORTB	set	6
   364  0005                     _PORTA	set	5
   365  001F                     _ADCON0bits	set	31
   366  008F                     _OSCCONbits	set	143
   367  0088                     _TRISD	set	136
   368  0087                     _TRISC	set	135
   369  0086                     _TRISB	set	134
   370  0085                     _TRISA	set	133
   371  009F                     _ADCON1bits	set	159
   372  0189                     _ANSELH	set	393
   373  0188                     _ANSEL	set	392
   374                           
   375                           ; #config settings
   376  0000                     
   377                           	psect	cinit
   378  07FB                     start_initialization:	
   379  07FB                     __initialization:	
   380                           
   381                           ; Clear objects allocated to COMMON
   382  07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   383  07FC                     end_of_initialization:	
   384                           ;End of C runtime variable initialization code
   385                           
   386  07FC                     __end_of__initialization:	
   387  07FC  0183               	clrf	3
   388  07FD  120A  118A  2F64   	ljmp	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMMON
   391  0075                     __pbssCOMMON:	
   392  0075                     _ADC_CH1_BIN:	
   393  0075                     	ds	1
   394                           
   395                           	psect	cstackCOMMON
   396  0070                     __pcstackCOMMON:	
   397  0070                     ?_initOsc:	
   398  0070                     ??_initOsc:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_init:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ??_init:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_initADC:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ??_initADC:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_main:	
   414                           ; 1 bytes @ 0x0
   415                           
   416                           
   417                           ; 1 bytes @ 0x0
   418  0070                     	ds	2
   419  0072                     initOsc@frec:	
   420                           
   421                           ; 1 bytes @ 0x2
   422  0072                     	ds	1
   423  0073                     ??_main:	
   424                           
   425                           ; 1 bytes @ 0x3
   426  0073                     	ds	2
   427                           
   428                           	psect	maintext
   429  0764                     __pmaintext:	
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 47 in file "ADC_Slave.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : B00/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0
   452 ;;      Totals:         2       0       0       0       0
   453 ;;Total ram usage:        2 bytes
   454 ;; Hardware stack levels required when called:    1
   455 ;; This function calls:
   456 ;;		_init
   457 ;;		_initADC
   458 ;;		_initOsc
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           
   465                           ;psect for function _main
   466  0764                     _main:	
   467  0764                     l684:	
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   470                           
   471                           
   472                           ;ADC_Slave.c: 48:     initOsc(7);
   473  0764  3007               	movlw	7
   474  0765  120A  118A  279F  120A  118A  	fcall	_initOsc
   475  076A                     l686:	
   476                           
   477                           ;ADC_Slave.c: 49:     init();
   478  076A  120A  118A  274A  120A  118A  	fcall	_init
   479  076F                     l688:	
   480                           
   481                           ;ADC_Slave.c: 50:     initADC();
   482  076F  120A  118A  2757  120A  118A  	fcall	_initADC
   483  0774                     l690:	
   484                           
   485                           ;ADC_Slave.c: 52:     PORTA = 0;
   486  0774  1283               	bcf	3,5	;RP0=0, select bank0
   487  0775  1303               	bcf	3,6	;RP1=0, select bank0
   488  0776  0185               	clrf	5	;volatile
   489  0777                     l692:	
   490                           
   491                           ;ADC_Slave.c: 53:     PORTB = 0;
   492  0777  0186               	clrf	6	;volatile
   493  0778                     l694:	
   494                           
   495                           ;ADC_Slave.c: 54:     PORTC = 0;
   496  0778  0187               	clrf	7	;volatile
   497  0779                     l696:	
   498                           
   499                           ;ADC_Slave.c: 55:     PORTD = 0;
   500  0779  0188               	clrf	8	;volatile
   501  077A                     l698:	
   502                           
   503                           ;ADC_Slave.c: 58:         _delay((unsigned long)((1)*(8000000/4000.0)));
   504  077A  3003               	movlw	3
   505  077B  00F4               	movwf	??_main+1
   506  077C  3097               	movlw	151
   507  077D  00F3               	movwf	??_main
   508  077E                     u17:	
   509  077E  0BF3               	decfsz	??_main,f
   510  077F  2F7E               	goto	u17
   511  0780  0BF4               	decfsz	??_main+1,f
   512  0781  2F7E               	goto	u17
   513  0782  2F83               	nop2
   514  0783                     l700:	
   515                           
   516                           ;ADC_Slave.c: 59:         ADCON0bits.CHS0 = 0;
   517  0783  1283               	bcf	3,5	;RP0=0, select bank0
   518  0784  1303               	bcf	3,6	;RP1=0, select bank0
   519  0785  111F               	bcf	31,2	;volatile
   520  0786                     l702:	
   521                           
   522                           ;ADC_Slave.c: 60:         ADCON0bits.CHS1 = 0;
   523  0786  119F               	bcf	31,3	;volatile
   524  0787                     l704:	
   525                           
   526                           ;ADC_Slave.c: 61:         ADCON0bits.CHS2 = 0;
   527  0787  121F               	bcf	31,4	;volatile
   528  0788                     l706:	
   529                           
   530                           ;ADC_Slave.c: 62:         ADCON0bits.CHS3 = 0;
   531  0788  129F               	bcf	31,5	;volatile
   532  0789                     l708:	
   533                           
   534                           ;ADC_Slave.c: 63:         ADCON0bits.ADON = 1;
   535  0789  141F               	bsf	31,0	;volatile
   536  078A                     l710:	
   537                           
   538                           ;ADC_Slave.c: 65:         PIR1bits.ADIF = 0;
   539  078A  130C               	bcf	12,6	;volatile
   540  078B                     l712:	
   541                           
   542                           ;ADC_Slave.c: 66:         ADCON0bits.GO = 1;
   543  078B  149F               	bsf	31,1	;volatile
   544  078C                     l714:	
   545                           
   546                           ;ADC_Slave.c: 67:         ADC_CH1_BIN = ADRESH;
   547  078C  081E               	movf	30,w	;volatile
   548  078D  00F3               	movwf	??_main
   549  078E  0873               	movf	??_main,w
   550  078F  00F5               	movwf	_ADC_CH1_BIN
   551  0790                     l716:	
   552                           
   553                           ;ADC_Slave.c: 68:         PORTB = ADC_CH1_BIN;
   554  0790  0875               	movf	_ADC_CH1_BIN,w
   555  0791  0086               	movwf	6	;volatile
   556  0792                     l718:	
   557                           
   558                           ;ADC_Slave.c: 70:         _delay((unsigned long)((5)*(8000000/4000.0)));
   559  0792  300D               	movlw	13
   560  0793  00F4               	movwf	??_main+1
   561  0794  30FB               	movlw	251
   562  0795  00F3               	movwf	??_main
   563  0796                     u27:	
   564  0796  0BF3               	decfsz	??_main,f
   565  0797  2F96               	goto	u27
   566  0798  0BF4               	decfsz	??_main+1,f
   567  0799  2F96               	goto	u27
   568  079A  2F9B               	nop2
   569  079B  2F7A               	goto	l698
   570  079C  120A  118A  2800   	ljmp	start
   571  079F                     __end_of_main:	
   572                           
   573                           	psect	text1
   574  079F                     __ptext1:	
   575 ;; *************** function _initOsc *****************
   576 ;; Defined at:
   577 ;;		line 8 in file "Oscilador.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  frec            1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  frec            1    2[COMMON] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0
   593 ;;      Temps:          2       0       0       0       0
   594 ;;      Totals:         3       0       0       0       0
   595 ;;Total ram usage:        3 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _initOsc
   606  079F                     _initOsc:	
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   610                           ;initOsc@frec stored from wreg
   611  079F  00F2               	movwf	initOsc@frec
   612  07A0                     l664:	
   613                           
   614                           ;Oscilador.c: 9:     switch(frec){
   615  07A0  2FD7               	goto	l668
   616  07A1                     l60:	
   617                           ;Oscilador.c: 10:         case 0:
   618                           
   619                           
   620                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   621  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   622  07A2  1303               	bcf	3,6	;RP1=0, select bank1
   623  07A3  120F               	bcf	15,4	;volatile
   624                           
   625                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   626  07A4  128F               	bcf	15,5	;volatile
   627                           
   628                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   629  07A5  130F               	bcf	15,6	;volatile
   630                           
   631                           ;Oscilador.c: 14:             break;
   632  07A6  2FF9               	goto	l61
   633  07A7                     l62:	
   634                           ;Oscilador.c: 15:         case 1:
   635                           
   636                           
   637                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   638  07A7  1683               	bsf	3,5	;RP0=1, select bank1
   639  07A8  1303               	bcf	3,6	;RP1=0, select bank1
   640  07A9  160F               	bsf	15,4	;volatile
   641                           
   642                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   643  07AA  128F               	bcf	15,5	;volatile
   644                           
   645                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   646  07AB  130F               	bcf	15,6	;volatile
   647                           
   648                           ;Oscilador.c: 19:             break;
   649  07AC  2FF9               	goto	l61
   650  07AD                     l63:	
   651                           ;Oscilador.c: 20:         case 2:
   652                           
   653                           
   654                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   655  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   656  07AE  1303               	bcf	3,6	;RP1=0, select bank1
   657  07AF  120F               	bcf	15,4	;volatile
   658                           
   659                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   660  07B0  168F               	bsf	15,5	;volatile
   661                           
   662                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   663  07B1  130F               	bcf	15,6	;volatile
   664                           
   665                           ;Oscilador.c: 24:             break;
   666  07B2  2FF9               	goto	l61
   667  07B3                     l64:	
   668                           ;Oscilador.c: 25:         case 3:
   669                           
   670                           
   671                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   672  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   673  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   674  07B5  160F               	bsf	15,4	;volatile
   675                           
   676                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   677  07B6  168F               	bsf	15,5	;volatile
   678                           
   679                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   680  07B7  130F               	bcf	15,6	;volatile
   681                           
   682                           ;Oscilador.c: 29:             break;
   683  07B8  2FF9               	goto	l61
   684  07B9                     l65:	
   685                           ;Oscilador.c: 30:         case 4:
   686                           
   687                           
   688                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
   689  07B9  1683               	bsf	3,5	;RP0=1, select bank1
   690  07BA  1303               	bcf	3,6	;RP1=0, select bank1
   691  07BB  120F               	bcf	15,4	;volatile
   692                           
   693                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
   694  07BC  128F               	bcf	15,5	;volatile
   695                           
   696                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   697  07BD  170F               	bsf	15,6	;volatile
   698                           
   699                           ;Oscilador.c: 34:             break;
   700  07BE  2FF9               	goto	l61
   701  07BF                     l66:	
   702                           ;Oscilador.c: 35:         case 5:
   703                           
   704                           
   705                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
   706  07BF  1683               	bsf	3,5	;RP0=1, select bank1
   707  07C0  1303               	bcf	3,6	;RP1=0, select bank1
   708  07C1  160F               	bsf	15,4	;volatile
   709                           
   710                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
   711  07C2  128F               	bcf	15,5	;volatile
   712                           
   713                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   714  07C3  170F               	bsf	15,6	;volatile
   715                           
   716                           ;Oscilador.c: 39:             break;
   717  07C4  2FF9               	goto	l61
   718  07C5                     l67:	
   719                           ;Oscilador.c: 40:         case 6:
   720                           
   721                           
   722                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
   723  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   724  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   725  07C7  120F               	bcf	15,4	;volatile
   726                           
   727                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
   728  07C8  168F               	bsf	15,5	;volatile
   729                           
   730                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   731  07C9  170F               	bsf	15,6	;volatile
   732                           
   733                           ;Oscilador.c: 44:             break;
   734  07CA  2FF9               	goto	l61
   735  07CB                     l68:	
   736                           ;Oscilador.c: 45:         case 7:
   737                           
   738                           
   739                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
   740  07CB  1683               	bsf	3,5	;RP0=1, select bank1
   741  07CC  1303               	bcf	3,6	;RP1=0, select bank1
   742  07CD  160F               	bsf	15,4	;volatile
   743                           
   744                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
   745  07CE  168F               	bsf	15,5	;volatile
   746                           
   747                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   748  07CF  170F               	bsf	15,6	;volatile
   749                           
   750                           ;Oscilador.c: 49:             break;
   751  07D0  2FF9               	goto	l61
   752  07D1                     l69:	
   753                           ;Oscilador.c: 50:         default:
   754                           
   755                           
   756                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
   757  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   758  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   759  07D3  120F               	bcf	15,4	;volatile
   760                           
   761                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
   762  07D4  168F               	bsf	15,5	;volatile
   763                           
   764                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
   765  07D5  170F               	bsf	15,6	;volatile
   766                           
   767                           ;Oscilador.c: 54:             break;
   768  07D6  2FF9               	goto	l61
   769  07D7                     l668:	
   770  07D7  0872               	movf	initOsc@frec,w
   771  07D8  00F0               	movwf	??_initOsc
   772  07D9  01F1               	clrf	??_initOsc+1
   773                           
   774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 1, Range of values is 0 to 0
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte            4     3 (average)
   780                           ; direct_byte           11     8 (fixed)
   781                           ; jumptable            260     6 (fixed)
   782                           ;	Chosen strategy is simple_byte
   783  07DA  0871               	movf	??_initOsc+1,w
   784  07DB  3A00               	xorlw	0	; case 0
   785  07DC  1903               	skipnz
   786  07DD  2FDF               	goto	l740
   787  07DE  2FD1               	goto	l69
   788  07DF                     l740:	
   789                           
   790                           ; Switch size 1, requested type "simple"
   791                           ; Number of cases is 8, Range of values is 0 to 7
   792                           ; switch strategies available:
   793                           ; Name         Instructions Cycles
   794                           ; simple_byte           25    13 (average)
   795                           ; direct_byte           32     8 (fixed)
   796                           ; jumptable            260     6 (fixed)
   797                           ;	Chosen strategy is simple_byte
   798  07DF  0870               	movf	??_initOsc,w
   799  07E0  3A00               	xorlw	0	; case 0
   800  07E1  1903               	skipnz
   801  07E2  2FA1               	goto	l60
   802  07E3  3A01               	xorlw	1	; case 1
   803  07E4  1903               	skipnz
   804  07E5  2FA7               	goto	l62
   805  07E6  3A03               	xorlw	3	; case 2
   806  07E7  1903               	skipnz
   807  07E8  2FAD               	goto	l63
   808  07E9  3A01               	xorlw	1	; case 3
   809  07EA  1903               	skipnz
   810  07EB  2FB3               	goto	l64
   811  07EC  3A07               	xorlw	7	; case 4
   812  07ED  1903               	skipnz
   813  07EE  2FB9               	goto	l65
   814  07EF  3A01               	xorlw	1	; case 5
   815  07F0  1903               	skipnz
   816  07F1  2FBF               	goto	l66
   817  07F2  3A03               	xorlw	3	; case 6
   818  07F3  1903               	skipnz
   819  07F4  2FC5               	goto	l67
   820  07F5  3A01               	xorlw	1	; case 7
   821  07F6  1903               	skipnz
   822  07F7  2FCB               	goto	l68
   823  07F8  2FD1               	goto	l69
   824  07F9                     l61:	
   825                           
   826                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
   827  07F9  140F               	bsf	15,0	;volatile
   828  07FA                     l70:	
   829  07FA  0008               	return
   830  07FB                     __end_of_initOsc:	
   831                           
   832                           	psect	text2
   833  0757                     __ptext2:	
   834 ;; *************** function _initADC *****************
   835 ;; Defined at:
   836 ;;		line 15 in file "ADC.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		None
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       0       0       0       0
   854 ;;Total ram usage:        0 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _initADC
   865  0757                     _initADC:	
   866  0757                     l662:	
   867                           ;incstack = 0
   868                           ; Regs used in _initADC: []
   869                           
   870                           
   871                           ;ADC.c: 17:     ADCON0bits.ADCS0 = 0;
   872  0757  1283               	bcf	3,5	;RP0=0, select bank0
   873  0758  1303               	bcf	3,6	;RP1=0, select bank0
   874  0759  131F               	bcf	31,6	;volatile
   875                           
   876                           ;ADC.c: 18:     ADCON0bits.ADCS1 = 1;
   877  075A  179F               	bsf	31,7	;volatile
   878                           
   879                           ;ADC.c: 20:     ADCON1bits.ADFM = 0;
   880  075B  1683               	bsf	3,5	;RP0=1, select bank1
   881  075C  1303               	bcf	3,6	;RP1=0, select bank1
   882  075D  139F               	bcf	31,7	;volatile
   883                           
   884                           ;ADC.c: 21:     ADCON1bits.VCFG0 = 0;
   885  075E  121F               	bcf	31,4	;volatile
   886                           
   887                           ;ADC.c: 22:     ADCON1bits.VCFG1 = 0;
   888  075F  129F               	bcf	31,5	;volatile
   889                           
   890                           ;ADC.c: 24:     ADCON0bits.ADON = 1;
   891  0760  1283               	bcf	3,5	;RP0=0, select bank0
   892  0761  1303               	bcf	3,6	;RP1=0, select bank0
   893  0762  141F               	bsf	31,0	;volatile
   894  0763                     l7:	
   895  0763  0008               	return
   896  0764                     __end_of_initADC:	
   897                           
   898                           	psect	text3
   899  074A                     __ptext3:	
   900 ;; *************** function _init *****************
   901 ;; Defined at:
   902 ;;		line 77 in file "ADC_Slave.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _init
   931  074A                     _init:	
   932  074A                     l674:	
   933                           ;incstack = 0
   934                           ; Regs used in _init: [wreg+status,2]
   935                           
   936                           
   937                           ;ADC_Slave.c: 78:     TRISA = 0b00000001;
   938  074A  3001               	movlw	1
   939  074B  1683               	bsf	3,5	;RP0=1, select bank1
   940  074C  1303               	bcf	3,6	;RP1=0, select bank1
   941  074D  0085               	movwf	5	;volatile
   942  074E                     l676:	
   943                           
   944                           ;ADC_Slave.c: 79:     TRISB = 0;
   945  074E  0186               	clrf	6	;volatile
   946  074F                     l678:	
   947                           
   948                           ;ADC_Slave.c: 80:     TRISC = 0;
   949  074F  0187               	clrf	7	;volatile
   950  0750                     l680:	
   951                           
   952                           ;ADC_Slave.c: 81:     TRISD = 0;
   953  0750  0188               	clrf	8	;volatile
   954  0751                     l682:	
   955                           
   956                           ;ADC_Slave.c: 82:     ANSEL = 0b00000001;
   957  0751  3001               	movlw	1
   958  0752  1683               	bsf	3,5	;RP0=1, select bank3
   959  0753  1703               	bsf	3,6	;RP1=1, select bank3
   960  0754  0088               	movwf	8	;volatile
   961                           
   962                           ;ADC_Slave.c: 83:     ANSELH = 0;
   963  0755  0189               	clrf	9	;volatile
   964  0756                     l54:	
   965  0756  0008               	return
   966  0757                     __end_of_init:	
   967  007E                     btemp	set	126	;btemp
   968  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              3 COMMON     2     2      0
                               _init
                            _initADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initADC
   _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 22 22:55:24 2020

                       l7 0763               __CFG_CP$OFF 0000                        l60 07A1  
                      l61 07F9                        l54 0756                        l70 07FA  
                      l62 07A7                        l63 07AD                        l64 07B3  
                      l65 07B9                        l66 07BF                        l67 07C5  
                      l68 07CB                        l69 07D1                        u17 077E  
                      u27 0796                       l700 0783                       l710 078A  
                     l702 0786                       l712 078B                       l704 0787  
                     l714 078C                       l706 0788                       l740 07DF  
                     l716 0790                       l708 0789                       l662 0757  
                     l718 0792                       l680 0750                       l664 07A0  
                     l682 0751                       l674 074A                       l690 0774  
                     l676 074E                       l668 07D7                       l692 0777  
                     l684 0764                       l678 074F                       l694 0778  
                     l686 076A                       l696 0779                       l688 076F  
                     l698 077A              __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 0764                      _init 074A  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070                     ?_init 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000           __end_of_initADC 0764           __end_of_initOsc 07FB  
          __CFG_BOREN$OFF 0000                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FB              __end_of_main 079F  
            __end_of_init 0757                    ??_main 0073                    ??_init 0070  
                  _ADRESH 001E                    _ANSELH 0189               initOsc@frec 0072  
          __CFG_PWRTE$OFF 0000                 ??_initADC 0070                 ??_initOsc 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 0764  
                 __ptext1 079F                   __ptext2 0757                   __ptext3 074A  
                 _initADC 0757                   _initOsc 079F      end_of_initialization 07FC  
             _ADC_CH1_BIN 0075       start_initialization 07FB  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0075                 ___latbits 0002                  ?_initADC 0070  
                ?_initOsc 0070                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_initADC 000D          __size_of_initOsc 005C  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 003B             __size_of_init 000D  
              _OSCCONbits 008F  
