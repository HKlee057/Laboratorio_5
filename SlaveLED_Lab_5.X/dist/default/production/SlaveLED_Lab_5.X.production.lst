

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 17:54:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  008F                     	;# 
   247  0090                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009C                     	;# 
   262  009D                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  0105                     	;# 
   266  0107                     	;# 
   267  0108                     	;# 
   268  0109                     	;# 
   269  010C                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  010E                     	;# 
   273  010F                     	;# 
   274  0185                     	;# 
   275  0187                     	;# 
   276  0188                     	;# 
   277  0189                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0008                     _PORTDbits	set	8
   281  0008                     _PORTD	set	8
   282  0007                     _PORTC	set	7
   283  0006                     _PORTB	set	6
   284  0005                     _PORTA	set	5
   285  008F                     _OSCCONbits	set	143
   286  0088                     _TRISD	set	136
   287  0087                     _TRISC	set	135
   288  0086                     _TRISB	set	134
   289  0085                     _TRISA	set	133
   290  0189                     _ANSELH	set	393
   291  0188                     _ANSEL	set	392
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  07F9                     start_initialization:	
   297  07F9                     __initialization:	
   298                           
   299                           ; Clear objects allocated to COMMON
   300  07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   301  07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   302  07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   303  07FC                     end_of_initialization:	
   304                           ;End of C runtime variable initialization code
   305                           
   306  07FC                     __end_of__initialization:	
   307  07FC  0183               	clrf	3
   308  07FD  120A  118A  2F8F   	ljmp	_main	;jump to C main() function
   309                           
   310                           	psect	bssCOMMON
   311  0075                     __pbssCOMMON:	
   312  0075                     _count:	
   313  0075                     	ds	1
   314  0076                     _sub_button:	
   315  0076                     	ds	1
   316  0077                     _add_button:	
   317  0077                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:	
   321  0070                     ?_initOsc:	
   322  0070                     ??_initOsc:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_init:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_init:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_main:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 1 bytes @ 0x0
   336  0070                     	ds	2
   337  0072                     initOsc@frec:	
   338                           
   339                           ; 1 bytes @ 0x2
   340  0072                     	ds	1
   341  0073                     ??_main:	
   342                           
   343                           ; 1 bytes @ 0x3
   344  0073                     	ds	2
   345                           
   346                           	psect	maintext
   347  078F                     __pmaintext:	
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 54 in file "LED_Slave.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          2       0       0       0       0
   370 ;;      Totals:         2       0       0       0       0
   371 ;;Total ram usage:        2 bytes
   372 ;; Hardware stack levels required when called:    1
   373 ;; This function calls:
   374 ;;		_init
   375 ;;		_initOsc
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _main
   383  078F                     _main:	
   384  078F                     l677:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;LED_Slave.c: 55:     initOsc(7);
   390  078F  3007               	movlw	7
   391  0790  120A  118A  2733  120A  118A  	fcall	_initOsc
   392  0795                     l679:	
   393                           
   394                           ;LED_Slave.c: 56:     init();
   395  0795  120A  118A  2727  120A  118A  	fcall	_init
   396  079A                     l681:	
   397                           
   398                           ;LED_Slave.c: 58:     PORTA = 0x00;
   399  079A  1283               	bcf	3,5	;RP0=0, select bank0
   400  079B  1303               	bcf	3,6	;RP1=0, select bank0
   401  079C  0185               	clrf	5	;volatile
   402  079D                     l683:	
   403                           
   404                           ;LED_Slave.c: 59:     PORTB = 0x00;
   405  079D  0186               	clrf	6	;volatile
   406  079E                     l685:	
   407                           
   408                           ;LED_Slave.c: 60:     PORTC = 0x00;
   409  079E  0187               	clrf	7	;volatile
   410  079F                     l687:	
   411                           
   412                           ;LED_Slave.c: 61:     PORTD = 0x00;
   413  079F  0188               	clrf	8	;volatile
   414  07A0                     l689:	
   415                           
   416                           ;LED_Slave.c: 65:     if (PORTDbits.RD2 == 1){
   417  07A0  1D08               	btfss	8,2	;volatile
   418  07A1  2FA3               	goto	u11
   419  07A2  2FA4               	goto	u10
   420  07A3                     u11:	
   421  07A3  2FA6               	goto	l693
   422  07A4                     u10:	
   423  07A4                     l691:	
   424                           
   425                           ;LED_Slave.c: 66:         add_button=1;
   426  07A4  01F7               	clrf	_add_button
   427  07A5  0AF7               	incf	_add_button,f
   428  07A6                     l693:	
   429                           
   430                           ;LED_Slave.c: 68:     if (add_button==1 && PORTDbits.RD2==0){
   431  07A6  0377               	decf	_add_button,w
   432  07A7  1D03               	btfss	3,2
   433  07A8  2FAA               	goto	u21
   434  07A9  2FAB               	goto	u20
   435  07AA                     u21:	
   436  07AA  2FC1               	goto	l705
   437  07AB                     u20:	
   438  07AB                     l695:	
   439  07AB  1908               	btfsc	8,2	;volatile
   440  07AC  2FAE               	goto	u31
   441  07AD  2FAF               	goto	u30
   442  07AE                     u31:	
   443  07AE  2FC1               	goto	l705
   444  07AF                     u30:	
   445  07AF                     l697:	
   446                           
   447                           ;LED_Slave.c: 69:         _delay((unsigned long)((10)*(8000000/4000.0)));
   448  07AF  301A               	movlw	26
   449  07B0  00F4               	movwf	??_main+1
   450  07B1  30F8               	movlw	248
   451  07B2  00F3               	movwf	??_main
   452  07B3                     u97:	
   453  07B3  0BF3               	decfsz	??_main,f
   454  07B4  2FB3               	goto	u97
   455  07B5  0BF4               	decfsz	??_main+1,f
   456  07B6  2FB3               	goto	u97
   457  07B7  0000               	nop
   458  07B8                     l699:	
   459                           
   460                           ;LED_Slave.c: 70:         count++;
   461  07B8  3001               	movlw	1
   462  07B9  00F3               	movwf	??_main
   463  07BA  0873               	movf	??_main,w
   464  07BB  07F5               	addwf	_count,f
   465  07BC                     l701:	
   466                           
   467                           ;LED_Slave.c: 71:         PORTB = count;
   468  07BC  0875               	movf	_count,w
   469  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   470  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   471  07BF  0086               	movwf	6	;volatile
   472  07C0                     l703:	
   473                           
   474                           ;LED_Slave.c: 72:         add_button = 0;
   475  07C0  01F7               	clrf	_add_button
   476  07C1                     l705:	
   477                           
   478                           ;LED_Slave.c: 74:     if (count==16){
   479  07C1  3010               	movlw	16
   480  07C2  0675               	xorwf	_count,w
   481  07C3  1D03               	btfss	3,2
   482  07C4  2FC6               	goto	u41
   483  07C5  2FC7               	goto	u40
   484  07C6                     u41:	
   485  07C6  2FC9               	goto	l711
   486  07C7                     u40:	
   487  07C7                     l707:	
   488                           
   489                           ;LED_Slave.c: 75:         count = 0;
   490  07C7  01F5               	clrf	_count
   491  07C8                     l709:	
   492                           
   493                           ;LED_Slave.c: 76:         PORTB = count;
   494  07C8  0186               	clrf	6	;volatile
   495  07C9                     l711:	
   496                           
   497                           ;LED_Slave.c: 79:     if (PORTDbits.RD3 == 1){
   498  07C9  1D88               	btfss	8,3	;volatile
   499  07CA  2FCC               	goto	u51
   500  07CB  2FCD               	goto	u50
   501  07CC                     u51:	
   502  07CC  2FCF               	goto	l715
   503  07CD                     u50:	
   504  07CD                     l713:	
   505                           
   506                           ;LED_Slave.c: 80:         sub_button=1;
   507  07CD  01F6               	clrf	_sub_button
   508  07CE  0AF6               	incf	_sub_button,f
   509  07CF                     l715:	
   510                           
   511                           ;LED_Slave.c: 82:     if (sub_button==1 && PORTDbits.RD3==0){
   512  07CF  0376               	decf	_sub_button,w
   513  07D0  1D03               	btfss	3,2
   514  07D1  2FD3               	goto	u61
   515  07D2  2FD4               	goto	u60
   516  07D3                     u61:	
   517  07D3  2FEA               	goto	l727
   518  07D4                     u60:	
   519  07D4                     l717:	
   520  07D4  1988               	btfsc	8,3	;volatile
   521  07D5  2FD7               	goto	u71
   522  07D6  2FD8               	goto	u70
   523  07D7                     u71:	
   524  07D7  2FEA               	goto	l727
   525  07D8                     u70:	
   526  07D8                     l719:	
   527                           
   528                           ;LED_Slave.c: 83:         _delay((unsigned long)((10)*(8000000/4000.0)));
   529  07D8  301A               	movlw	26
   530  07D9  00F4               	movwf	??_main+1
   531  07DA  30F8               	movlw	248
   532  07DB  00F3               	movwf	??_main
   533  07DC                     u107:	
   534  07DC  0BF3               	decfsz	??_main,f
   535  07DD  2FDC               	goto	u107
   536  07DE  0BF4               	decfsz	??_main+1,f
   537  07DF  2FDC               	goto	u107
   538  07E0  0000               	nop
   539  07E1                     l721:	
   540                           
   541                           ;LED_Slave.c: 84:         count--;
   542  07E1  30FF               	movlw	255
   543  07E2  00F3               	movwf	??_main
   544  07E3  0873               	movf	??_main,w
   545  07E4  07F5               	addwf	_count,f
   546  07E5                     l723:	
   547                           
   548                           ;LED_Slave.c: 85:         PORTB = count;
   549  07E5  0875               	movf	_count,w
   550  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   551  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   552  07E8  0086               	movwf	6	;volatile
   553  07E9                     l725:	
   554                           
   555                           ;LED_Slave.c: 86:         sub_button = 0;
   556  07E9  01F6               	clrf	_sub_button
   557  07EA                     l727:	
   558                           
   559                           ;LED_Slave.c: 88:     if (count==-1){
   560  07EA  0A75               	incf	_count,w
   561  07EB  1D03               	btfss	3,2
   562  07EC  2FEE               	goto	u81
   563  07ED  2FEF               	goto	u80
   564  07EE                     u81:	
   565  07EE  2FA0               	goto	l689
   566  07EF                     u80:	
   567  07EF                     l729:	
   568                           
   569                           ;LED_Slave.c: 89:         count = 15;
   570  07EF  300F               	movlw	15
   571  07F0  00F3               	movwf	??_main
   572  07F1  0873               	movf	??_main,w
   573  07F2  00F5               	movwf	_count
   574                           
   575                           ;LED_Slave.c: 90:         PORTB = count;
   576  07F3  300F               	movlw	15
   577  07F4  0086               	movwf	6	;volatile
   578  07F5  2FA0               	goto	l689
   579  07F6  120A  118A  2800   	ljmp	start
   580  07F9                     __end_of_main:	
   581                           
   582                           	psect	text1
   583  0733                     __ptext1:	
   584 ;; *************** function _initOsc *****************
   585 ;; Defined at:
   586 ;;		line 8 in file "Oscilador.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;  frec            1    wreg     unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  frec            1    2[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0
   602 ;;      Temps:          2       0       0       0       0
   603 ;;      Totals:         3       0       0       0       0
   604 ;;Total ram usage:        3 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _initOsc
   615  0733                     _initOsc:	
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   619                           ;initOsc@frec stored from wreg
   620  0733  00F2               	movwf	initOsc@frec
   621  0734                     l659:	
   622                           
   623                           ;Oscilador.c: 9:     switch(frec){
   624  0734  2F6B               	goto	l663
   625  0735                     l57:	
   626                           ;Oscilador.c: 10:         case 0:
   627                           
   628                           
   629                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   630  0735  1683               	bsf	3,5	;RP0=1, select bank1
   631  0736  1303               	bcf	3,6	;RP1=0, select bank1
   632  0737  120F               	bcf	15,4	;volatile
   633                           
   634                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   635  0738  128F               	bcf	15,5	;volatile
   636                           
   637                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   638  0739  130F               	bcf	15,6	;volatile
   639                           
   640                           ;Oscilador.c: 14:             break;
   641  073A  2F8D               	goto	l58
   642  073B                     l59:	
   643                           ;Oscilador.c: 15:         case 1:
   644                           
   645                           
   646                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   647  073B  1683               	bsf	3,5	;RP0=1, select bank1
   648  073C  1303               	bcf	3,6	;RP1=0, select bank1
   649  073D  160F               	bsf	15,4	;volatile
   650                           
   651                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   652  073E  128F               	bcf	15,5	;volatile
   653                           
   654                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   655  073F  130F               	bcf	15,6	;volatile
   656                           
   657                           ;Oscilador.c: 19:             break;
   658  0740  2F8D               	goto	l58
   659  0741                     l60:	
   660                           ;Oscilador.c: 20:         case 2:
   661                           
   662                           
   663                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   664  0741  1683               	bsf	3,5	;RP0=1, select bank1
   665  0742  1303               	bcf	3,6	;RP1=0, select bank1
   666  0743  120F               	bcf	15,4	;volatile
   667                           
   668                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   669  0744  168F               	bsf	15,5	;volatile
   670                           
   671                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   672  0745  130F               	bcf	15,6	;volatile
   673                           
   674                           ;Oscilador.c: 24:             break;
   675  0746  2F8D               	goto	l58
   676  0747                     l61:	
   677                           ;Oscilador.c: 25:         case 3:
   678                           
   679                           
   680                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   681  0747  1683               	bsf	3,5	;RP0=1, select bank1
   682  0748  1303               	bcf	3,6	;RP1=0, select bank1
   683  0749  160F               	bsf	15,4	;volatile
   684                           
   685                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   686  074A  168F               	bsf	15,5	;volatile
   687                           
   688                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   689  074B  130F               	bcf	15,6	;volatile
   690                           
   691                           ;Oscilador.c: 29:             break;
   692  074C  2F8D               	goto	l58
   693  074D                     l62:	
   694                           ;Oscilador.c: 30:         case 4:
   695                           
   696                           
   697                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
   698  074D  1683               	bsf	3,5	;RP0=1, select bank1
   699  074E  1303               	bcf	3,6	;RP1=0, select bank1
   700  074F  120F               	bcf	15,4	;volatile
   701                           
   702                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
   703  0750  128F               	bcf	15,5	;volatile
   704                           
   705                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   706  0751  170F               	bsf	15,6	;volatile
   707                           
   708                           ;Oscilador.c: 34:             break;
   709  0752  2F8D               	goto	l58
   710  0753                     l63:	
   711                           ;Oscilador.c: 35:         case 5:
   712                           
   713                           
   714                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
   715  0753  1683               	bsf	3,5	;RP0=1, select bank1
   716  0754  1303               	bcf	3,6	;RP1=0, select bank1
   717  0755  160F               	bsf	15,4	;volatile
   718                           
   719                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
   720  0756  128F               	bcf	15,5	;volatile
   721                           
   722                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   723  0757  170F               	bsf	15,6	;volatile
   724                           
   725                           ;Oscilador.c: 39:             break;
   726  0758  2F8D               	goto	l58
   727  0759                     l64:	
   728                           ;Oscilador.c: 40:         case 6:
   729                           
   730                           
   731                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
   732  0759  1683               	bsf	3,5	;RP0=1, select bank1
   733  075A  1303               	bcf	3,6	;RP1=0, select bank1
   734  075B  120F               	bcf	15,4	;volatile
   735                           
   736                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
   737  075C  168F               	bsf	15,5	;volatile
   738                           
   739                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   740  075D  170F               	bsf	15,6	;volatile
   741                           
   742                           ;Oscilador.c: 44:             break;
   743  075E  2F8D               	goto	l58
   744  075F                     l65:	
   745                           ;Oscilador.c: 45:         case 7:
   746                           
   747                           
   748                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
   749  075F  1683               	bsf	3,5	;RP0=1, select bank1
   750  0760  1303               	bcf	3,6	;RP1=0, select bank1
   751  0761  160F               	bsf	15,4	;volatile
   752                           
   753                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
   754  0762  168F               	bsf	15,5	;volatile
   755                           
   756                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   757  0763  170F               	bsf	15,6	;volatile
   758                           
   759                           ;Oscilador.c: 49:             break;
   760  0764  2F8D               	goto	l58
   761  0765                     l66:	
   762                           ;Oscilador.c: 50:         default:
   763                           
   764                           
   765                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
   766  0765  1683               	bsf	3,5	;RP0=1, select bank1
   767  0766  1303               	bcf	3,6	;RP1=0, select bank1
   768  0767  120F               	bcf	15,4	;volatile
   769                           
   770                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
   771  0768  168F               	bsf	15,5	;volatile
   772                           
   773                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
   774  0769  170F               	bsf	15,6	;volatile
   775                           
   776                           ;Oscilador.c: 54:             break;
   777  076A  2F8D               	goto	l58
   778  076B                     l663:	
   779  076B  0872               	movf	initOsc@frec,w
   780  076C  00F0               	movwf	??_initOsc
   781  076D  01F1               	clrf	??_initOsc+1
   782                           
   783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 1, Range of values is 0 to 0
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte            4     3 (average)
   789                           ; direct_byte           11     8 (fixed)
   790                           ; jumptable            260     6 (fixed)
   791                           ;	Chosen strategy is simple_byte
   792  076E  0871               	movf	??_initOsc+1,w
   793  076F  3A00               	xorlw	0	; case 0
   794  0770  1903               	skipnz
   795  0771  2F73               	goto	l751
   796  0772  2F65               	goto	l66
   797  0773                     l751:	
   798                           
   799                           ; Switch size 1, requested type "simple"
   800                           ; Number of cases is 8, Range of values is 0 to 7
   801                           ; switch strategies available:
   802                           ; Name         Instructions Cycles
   803                           ; simple_byte           25    13 (average)
   804                           ; direct_byte           32     8 (fixed)
   805                           ; jumptable            260     6 (fixed)
   806                           ;	Chosen strategy is simple_byte
   807  0773  0870               	movf	??_initOsc,w
   808  0774  3A00               	xorlw	0	; case 0
   809  0775  1903               	skipnz
   810  0776  2F35               	goto	l57
   811  0777  3A01               	xorlw	1	; case 1
   812  0778  1903               	skipnz
   813  0779  2F3B               	goto	l59
   814  077A  3A03               	xorlw	3	; case 2
   815  077B  1903               	skipnz
   816  077C  2F41               	goto	l60
   817  077D  3A01               	xorlw	1	; case 3
   818  077E  1903               	skipnz
   819  077F  2F47               	goto	l61
   820  0780  3A07               	xorlw	7	; case 4
   821  0781  1903               	skipnz
   822  0782  2F4D               	goto	l62
   823  0783  3A01               	xorlw	1	; case 5
   824  0784  1903               	skipnz
   825  0785  2F53               	goto	l63
   826  0786  3A03               	xorlw	3	; case 6
   827  0787  1903               	skipnz
   828  0788  2F59               	goto	l64
   829  0789  3A01               	xorlw	1	; case 7
   830  078A  1903               	skipnz
   831  078B  2F5F               	goto	l65
   832  078C  2F65               	goto	l66
   833  078D                     l58:	
   834                           
   835                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
   836  078D  140F               	bsf	15,0	;volatile
   837  078E                     l67:	
   838  078E  0008               	return
   839  078F                     __end_of_initOsc:	
   840                           
   841                           	psect	text2
   842  0727                     __ptext2:	
   843 ;; *************** function _init *****************
   844 ;; Defined at:
   845 ;;		line 99 in file "LED_Slave.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _init
   874  0727                     _init:	
   875  0727                     l669:	
   876                           ;incstack = 0
   877                           ; Regs used in _init: [wreg+status,2]
   878                           
   879                           
   880                           ;LED_Slave.c: 100:     TRISA = 0;
   881  0727  1683               	bsf	3,5	;RP0=1, select bank1
   882  0728  1303               	bcf	3,6	;RP1=0, select bank1
   883  0729  0185               	clrf	5	;volatile
   884                           
   885                           ;LED_Slave.c: 101:     TRISB = 0;
   886  072A  0186               	clrf	6	;volatile
   887                           
   888                           ;LED_Slave.c: 102:     TRISC = 0;
   889  072B  0187               	clrf	7	;volatile
   890  072C                     l671:	
   891                           
   892                           ;LED_Slave.c: 103:     TRISD = 0b00001100;
   893  072C  300C               	movlw	12
   894  072D  0088               	movwf	8	;volatile
   895  072E                     l673:	
   896                           
   897                           ;LED_Slave.c: 104:     ANSEL = 0;
   898  072E  1683               	bsf	3,5	;RP0=1, select bank3
   899  072F  1703               	bsf	3,6	;RP1=1, select bank3
   900  0730  0188               	clrf	8	;volatile
   901  0731                     l675:	
   902                           
   903                           ;LED_Slave.c: 105:     ANSELH = 0;
   904  0731  0189               	clrf	9	;volatile
   905  0732                     l51:	
   906  0732  0008               	return
   907  0733                     __end_of_init:	
   908  007E                     btemp	set	126	;btemp
   909  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initOsc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              3 COMMON     2     2      0
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 17:54:59 2020

             __CFG_CP$OFF 0000                        l51 0732                        l60 0741  
                      l61 0747                        l62 074D                        l63 0753  
                      l64 0759                        l65 075F                        l57 0735  
                      l66 0765                        l58 078D                        l67 078E  
                      l59 073B                        u10 07A4                        u11 07A3  
                      u20 07AB                        u21 07AA                        u30 07AF  
                      u31 07AE                        u40 07C7                        u41 07C6  
                      u50 07CD                        u51 07CC                        u60 07D4  
                      u61 07D3                        u70 07D8                        u71 07D7  
                      u80 07EF                        u81 07EE                        u97 07B3  
                     l701 07BC                       l711 07C9                       l703 07C0  
                     l721 07E1                       l713 07CD                       l705 07C1  
                     l723 07E5                       l715 07CF                       l707 07C7  
                     l725 07E9                       l717 07D4                       l709 07C8  
                     l671 072C                       l751 0773                       l663 076B  
                     l719 07D8                       l727 07EA                       l673 072E  
                     l729 07EF                       l681 079A                       l675 0731  
                     l659 0734                       l691 07A4                       l683 079D  
                     l669 0727                       l693 07A6                       l685 079E  
                     l677 078F                       l695 07AB                       l687 079F  
                     l679 0795                       l697 07AF                       l689 07A0  
                     l699 07B8                       u107 07DC              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 078F  
                    _init 0727                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000           __end_of_initOsc 078F  
                   _count 0075            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07F9  
            __end_of_main 07F9              __end_of_init 0733                    ??_main 0073  
                  ??_init 0070                    _ANSELH 0189               initOsc@frec 0072  
          __CFG_PWRTE$OFF 0000                 ??_initOsc 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                _add_button 0077                __pmaintext 078F  
                 __ptext1 0733                   __ptext2 0727                   _initOsc 0733  
    end_of_initialization 07FC                 _PORTDbits 0008                _sub_button 0076  
     start_initialization 07F9  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0075  
               ___latbits 0002                  ?_initOsc 0070          __size_of_initOsc 005C  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 006A             __size_of_init 000C  
              _OSCCONbits 008F  
